#!/usr/bin/env python3
"""
Supabase'e Provider Verilerini Ekleme Scripti
"""

import os
import requests
import json
from datetime import datetime

# Supabase Konfig√ºrasyonu
SUPABASE_URL = "https://ugmyyphiqoahludwuzpu.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVnbXl5cGhpcW9haGx1ZHd1enB1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3ODYxOTUsImV4cCI6MjA2NjM2MjE5NX0.n3FmnmMjVqvodqmnvf1g74pACaZuiZ4SYw7oVMekyoc"
SUPABASE_SERVICE_ROLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVnbXl5cGhpcW9haGx1ZHd1enB1Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDc4NjE5NSwiZXhwIjoyMDY2MzYyMTk1fQ.Owy1Ps0tWq5JiqMM27vpsrp-N6KJoQvwwFPGCxy98QI"

def add_providers_to_supabase():
    """Supabase'e provider verilerini ekler"""
    
    print("üöÄ Supabase'e provider verileri ekleme ba≈ülatƒ±lƒ±yor...")
    print(f"üì° URL: {SUPABASE_URL}")
    print("-" * 50)
    
    # Provider verileri
    providers_data = [
        {
            "id": "770e8400-e29b-41d4-a716-446655440001",
            "user_id": "660e8400-e29b-41d4-a716-446655440002",
            "business_name": "G√ºzellik Salonu",
            "specialization": "Sa√ß ve G√ºzellik",
            "experience_years": 5,
            "city": "ƒ∞stanbul",
            "address": "Merkez Mah. G√ºzellik Sok. No:15",
            "bio": "Profesyonel g√ºzellik hizmetleri sunuyoruz.",
            "is_active": True,
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "770e8400-e29b-41d4-a716-446655440002",
            "user_id": "660e8400-e29b-41d4-a716-446655440003",
            "business_name": "Spa Merkezi",
            "specialization": "Masaj ve Terapi",
            "experience_years": 8,
            "city": "Ankara",
            "address": "√áankaya Mah. Spa Cad. No:25",
            "bio": "Rahatlatƒ±cƒ± spa ve masaj hizmetleri.",
            "is_active": True,
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "770e8400-e29b-41d4-a716-446655440003",
            "user_id": "660e8400-e29b-41d4-a716-446655440004",
            "business_name": "Berber D√ºkkanƒ±",
            "specialization": "Sa√ß ve Sakal",
            "experience_years": 3,
            "city": "ƒ∞zmir",
            "address": "Konak Mah. Berber Sok. No:8",
            "bio": "Modern berber hizmetleri.",
            "is_active": True,
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        }
    ]
    
    headers = {
        "apikey": SUPABASE_SERVICE_ROLE_KEY,
        "Authorization": f"Bearer {SUPABASE_SERVICE_ROLE_KEY}",
        "Content-Type": "application/json",
        "Prefer": "return=minimal"
    }
    
    success_count = 0
    error_count = 0
    
    for provider in providers_data:
        try:
            # √ñnce mevcut provider'ƒ± kontrol et
            check_url = f"{SUPABASE_URL}/rest/v1/providers?id=eq.{provider['id']}"
            check_response = requests.get(check_url, headers=headers)
            
            if check_response.status_code == 200 and check_response.json():
                print(f"‚ö†Ô∏è  {provider['business_name']}: Zaten mevcut")
                continue
            
            # Yeni provider ekle
            url = f"{SUPABASE_URL}/rest/v1/providers"
            response = requests.post(url, headers=headers, json=provider)
            
            if response.status_code in [201, 200]:
                print(f"‚úÖ {provider['business_name']}: Ba≈üarƒ±yla eklendi")
                success_count += 1
            else:
                print(f"‚ùå {provider['business_name']}: Hata - {response.status_code} - {response.text}")
                error_count += 1
                
        except Exception as e:
            print(f"‚ùå {provider['business_name']}: Hata - {str(e)}")
            error_count += 1
    
    print("-" * 50)
    print(f"üìä Sonu√ß: {success_count}/{len(providers_data)} provider ba≈üarƒ±yla eklendi")
    
    if error_count > 0:
        print(f"‚ö†Ô∏è  {error_count} provider eklenemedi. Hatalarƒ± kontrol edin.")
    else:
        print("üéâ T√ºm provider'lar ba≈üarƒ±yla eklendi!")

def add_services_to_supabase():
    """Supabase'e service verilerini ekler"""
    
    print("\nüöÄ Supabase'e service verileri ekleme ba≈ülatƒ±lƒ±yor...")
    print("-" * 50)
    
    # Service verileri
    services_data = [
        # G√ºzellik Salonu Hizmetleri
        {
            "id": "880e8400-e29b-41d4-a716-446655440001",
            "name": "Sa√ß Kesimi",
            "description": "Profesyonel sa√ß kesimi ve ≈üekillendirme",
            "duration": 45,
            "price": 150.00,
            "category": "Sa√ß",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440001",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440002",
            "name": "Sa√ß Boyama",
            "description": "Profesyonel sa√ß boyama ve renklendirme",
            "duration": 120,
            "price": 300.00,
            "category": "Sa√ß",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440001",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440003",
            "name": "Manik√ºr",
            "description": "El bakƒ±mƒ± ve oje uygulamasƒ±",
            "duration": 30,
            "price": 80.00,
            "category": "El-Ayak",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440001",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440004",
            "name": "Pedik√ºr",
            "description": "Ayak bakƒ±mƒ± ve oje uygulamasƒ±",
            "duration": 45,
            "price": 100.00,
            "category": "El-Ayak",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440001",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        
        # Spa Merkezi Hizmetleri
        {
            "id": "880e8400-e29b-41d4-a716-446655440005",
            "name": "Masaj Terapisi",
            "description": "Rahatlatƒ±cƒ± masaj terapisi",
            "duration": 60,
            "price": 200.00,
            "category": "Masaj",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440002",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440006",
            "name": "Aromaterapi",
            "description": "Aromatik yaƒülarla masaj",
            "duration": 90,
            "price": 250.00,
            "category": "Masaj",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440002",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440007",
            "name": "Cilt Bakƒ±mƒ±",
            "description": "Profesyonel cilt bakƒ±mƒ±",
            "duration": 75,
            "price": 180.00,
            "category": "Cilt",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440002",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        
        # Berber D√ºkkanƒ± Hizmetleri
        {
            "id": "880e8400-e29b-41d4-a716-446655440008",
            "name": "Erkek Sa√ß Kesimi",
            "description": "Modern erkek sa√ß kesimi",
            "duration": 30,
            "price": 80.00,
            "category": "Sa√ß",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440003",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440009",
            "name": "Sakal Tƒ±ra≈üƒ±",
            "description": "Profesyonel sakal tƒ±ra≈üƒ±",
            "duration": 20,
            "price": 50.00,
            "category": "Sakal",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440003",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        },
        {
            "id": "880e8400-e29b-41d4-a716-446655440010",
            "name": "Sa√ß-Sakal Paketi",
            "description": "Sa√ß kesimi + sakal tƒ±ra≈üƒ±",
            "duration": 45,
            "price": 120.00,
            "category": "Paket",
            "is_active": True,
            "provider_id": "770e8400-e29b-41d4-a716-446655440003",
            "created_at": datetime.now().isoformat(),
            "updated_at": datetime.now().isoformat()
        }
    ]
    
    headers = {
        "apikey": SUPABASE_SERVICE_ROLE_KEY,
        "Authorization": f"Bearer {SUPABASE_SERVICE_ROLE_KEY}",
        "Content-Type": "application/json",
        "Prefer": "return=minimal"
    }
    
    success_count = 0
    error_count = 0
    
    for service in services_data:
        try:
            # √ñnce mevcut service'i kontrol et
            check_url = f"{SUPABASE_URL}/rest/v1/services?id=eq.{service['id']}"
            check_response = requests.get(check_url, headers=headers)
            
            if check_response.status_code == 200 and check_response.json():
                print(f"‚ö†Ô∏è  {service['name']}: Zaten mevcut")
                continue
            
            # Yeni service ekle
            url = f"{SUPABASE_URL}/rest/v1/services"
            response = requests.post(url, headers=headers, json=service)
            
            if response.status_code in [201, 200]:
                print(f"‚úÖ {service['name']}: Ba≈üarƒ±yla eklendi")
                success_count += 1
            else:
                print(f"‚ùå {service['name']}: Hata - {response.status_code} - {response.text}")
                error_count += 1
                
        except Exception as e:
            print(f"‚ùå {service['name']}: Hata - {str(e)}")
            error_count += 1
    
    print("-" * 50)
    print(f"üìä Sonu√ß: {success_count}/{len(services_data)} service ba≈üarƒ±yla eklendi")
    
    if error_count > 0:
        print(f"‚ö†Ô∏è  {error_count} service eklenemedi. Hatalarƒ± kontrol edin.")
    else:
        print("üéâ T√ºm service'ler ba≈üarƒ±yla eklendi!")

if __name__ == "__main__":
    add_providers_to_supabase()
    add_services_to_supabase()
    print("\nüéØ Veri ekleme i≈ülemi tamamlandƒ±!") 